@using LexiconLMS.Models
@using LexiconLMS.Data
@page "/api/Activities"
@rendermode InteractiveServer
@inject ApplicationDbContext Dbcontext
@inject HttpClient Http
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager Navigation


<h3>Activities</h3>

<table class="table">
<thead>
    <tr>
        <th>Activity Id</th>
        <th>Activity Name</th>
        <th>Activity Description</th>
        <th>Start Date</th>
        <th>End Date</th>
    </tr>
</thead>
<tbody>
    @if (activities != null)
    {
        
    @foreach (var activity in activities)
    {
        <tr>
            <td>@activity.ActivityId</td>
            <td>@activity.ActivityName</td>
            <td>@activity.ActivityDescription</td>
            <td>@activity.StartDate</td>
            <td>@activity.EndDate</td>
        </tr>
    }
    }
</tbody>
</table>

@code {
    private List<Activity> activities;
    


    protected override async Task OnInitializedAsync()
    {
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        if (query.TryGetValue("moduleId", out var moduleId))
        {
            var client = HttpClientFactory.CreateClient("ApiClient");
            activities = await client.GetFromJsonAsync<List<Activity>>($"/api/Activities/{moduleId}");
        }
       
    }
  }
