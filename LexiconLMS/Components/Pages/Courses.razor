@using LexiconLMS.Models
@using LexiconLMS.Data
@page "/Models/Course"
@rendermode InteractiveServer
@inject ApplicationDbContext Dbcontext
@inject HttpClient Http
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager Navigation

<h3>Courses</h3>

<table class="table">
<thead>
    <tr>
        <th>Course Id</th>
        <th>Course Name</th>
        <th>Course Description</th>
        <th>Start Date</th>
    </tr>
</thead>
<tbody>
    @if (courses != null)
    {
        
    @foreach (var course in courses)
    {
        <tr>
            <td>@course.CourseId</td>
            <td>@course.CourseName</td>
            <td>@course.CourseDescription</td>
            <td>@course.StartDate</td>
            <td>
                <button class="btn btn-primary" @onclick="() => NavigateToModules(course.CourseId)">View Modules</button>
                <button class="btn btn-primary" @onclick="() => NavigateToActivities(course.CourseId)">View Activites </button>
            </td>
        </tr>
    }
    }
</tbody>
</table>

@code {
    private List<Course> courses;

    protected override async Task OnInitializedAsync()
    {
        var client = HttpClientFactory.CreateClient("ApiClient");
        courses = await client.GetFromJsonAsync<List<Course>>("/api/Courses");
    }

    private void NavigateToModules(int courseId)
    {
        Navigation.NavigateTo($"/Models/Module?courseId={courseId}");
    }

    private void NavigateToActivities(int courseId)
    {
        Navigation.NavigateTo($"/Models/Activity?courseId={courseId}");
    }
}
